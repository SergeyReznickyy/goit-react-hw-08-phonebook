{"version":3,"file":"static/js/851.05f60ff2.chunk.js","mappings":"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","sources":["components/pages/RegisterPage.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link as RouteLink } from 'react-router-dom';\nimport { enqueueSnackbar } from 'notistack';\nimport { string } from 'yup';\n\nimport {\n  Container,\n  Box,\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  Avatar,\n  Link,\n  CircularProgress,\n  Alert,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport { signUp } from '../../redux/authOperations';\nimport { useAuth } from '../../hooks/useAuth';\nimport { clearError } from '../../redux/authSlice';\n\nexport default function RegisterPage() {\n  const { error, isAuth } = useAuth();\n  const [isValid, setValid] = useState({\n    firstName: true,\n    lastName: true,\n    email: true,\n    password: true,\n  });\n  const dispatch = useDispatch();\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  console.log(isValid);\n  const nameSchema = string()\n    .matches(/^[a-zA-Zа-яіїєґА-ЯІЇЄҐ]+([' -][a-zA-Zа-яіїєґА-ЯІЇЄҐ]*)*$/)\n    .max(35);\n\n  const emailSchema = string().email();\n\n  const passwordSchema = string().min(6);\n\n  useEffect(() => {\n    return () => {\n      dispatch(clearError());\n    };\n  }, [dispatch]);\n\n  const inputChangeHandler = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'firstName':\n        nameSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, firstName: true })))\n          .catch(() => setValid(prev => ({ ...prev, firstName: false })));\n        setFirstName(value);\n        break;\n      case 'lastName':\n        nameSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, lastName: true })))\n          .catch(() => setValid(prev => ({ ...prev, lastName: false })));\n        setLastName(value);\n        break;\n      case 'email':\n        emailSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, email: true })))\n          .catch(() => setValid(prev => ({ ...prev, email: false })));\n        setEmail(value);\n        break;\n      case 'password':\n        passwordSchema\n          .validate(value)\n          .then(() => setValid(prev => ({ ...prev, password: true })))\n          .catch(() => setValid(prev => ({ ...prev, password: false })));\n        setPassword(value);\n        break;\n      default:\n        throw new Error('unsupported input name');\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const isValidData =\n      isValid.firstName &&\n      isValid.lastName &&\n      isValid.email &&\n      isValid.password;\n    if (!isValidData) {\n      enqueueSnackbar('Please check the entered data', {\n        variant: 'error',\n      });\n      return;\n    }\n    const formEls = e.target.elements;\n    const user = {\n      name: `${formEls.firstName.value} ${formEls.lastName.value}`,\n      email: formEls.email.value,\n      password: formEls.password.value,\n    };\n    dispatch(signUp(user));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n          {isAuth ? (\n            <CircularProgress size={24} color=\"inherit\" />\n          ) : (\n            <LockOutlinedIcon />\n          )}\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={submitHandler}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                onChange={inputChangeHandler}\n                type=\"text\"\n                value={firstName}\n                error={!isValid.firstName}\n                autoComplete=\"given-name\"\n                name=\"firstName\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                onChange={inputChangeHandler}\n                type=\"text\"\n                value={lastName}\n                error={!isValid.lastName}\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"family-name\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                onChange={inputChangeHandler}\n                type=\"email\"\n                value={email}\n                error={!isValid.email}\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                onChange={inputChangeHandler}\n                value={password}\n                error={!isValid.password}\n                title=\"Password must contain at least 8 characters\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            disabled={isAuth}\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <Link variant=\"body2\" component={RouteLink} to=\"/login\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n      {error && (\n        <Alert severity=\"error\">\n          {error !== 'Network Error'\n            ? 'This user is already registered. Please try again with a another email'\n            : error}\n        </Alert>\n      )}\n    </Container>\n  );\n}\n"],"names":["RegisterPage","_useAuth","useAuth","error","isAuth","_useState","useState","firstName","lastName","email","password","_useState2","_slicedToArray","isValid","setValid","dispatch","useDispatch","_useState3","_useState4","setFirstName","_useState5","_useState6","setLastName","_useState7","_useState8","setEmail","_useState9","_useState10","setPassword","console","log","nameSchema","string","matches","max","emailSchema","passwordSchema","min","useEffect","clearError","inputChangeHandler","e","_e$currentTarget","currentTarget","name","value","validate","then","prev","_objectSpread","catch","Error","_jsxs","Container","component","maxWidth","children","Box","sx","marginTop","display","flexDirection","alignItems","_jsx","Avatar","m","bgcolor","CircularProgress","size","color","LockOutlinedIcon","Typography","variant","noValidate","onSubmit","preventDefault","formEls","target","elements","user","concat","signUp","enqueueSnackbar","mt","Grid","container","spacing","item","xs","sm","TextField","onChange","type","autoComplete","required","fullWidth","id","label","autoFocus","title","Button","disabled","mb","justifyContent","Link","RouteLink","to","Alert","severity"],"sourceRoot":""}